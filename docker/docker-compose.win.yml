version: "3"

services:
  tika:
    image: logicalspark/docker-tikaserver:latest
    container_name: medgate-tika
    expose:
      - "9998"
    networks:
      - backend
    restart: on-failure

  redis:
    image: redis:4.0.8
    container_name: medgate-redis
#    command: ["redis-server", "--appendonly", "yes"]
#    volumes:
#      - "redisdata:/usr/share/redis/data"
    networks:
      - backend
    expose:
      - "6379"
    restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    container_name: medgate-elasticsearch
    env_file: ../medgate.config
    environment:
      - discovery.type=single-node
#      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=true
#      - xpack.monitoring.collection.enabled=true
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m     
#      - ES_JAVA_OPTS=-Xms26g -Xmx26g     
      - bootstrap.memory_lock=true       
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "esdata:/usr/share/elasticsearch/data"
    networks:
      - backend
    expose:
      - "9200"
    restart: on-failure

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.1
    container_name: medgate-kibana
    environment:
      - elasticsearch.url= http://elasticsearch:9200
      - xpack.monitoring.ui.container.elasticsearch.enabled=true
      - SERVER_BASEPATH=/kibana
    networks:
      - backend
    expose:
      - "5601"
    depends_on:
      - elasticsearch
    #command: ["./wait-for-it.sh", "elasticsearch:9200", "-t 0"]

  postgres:
    image: postgres:10-alpine
    container_name: medgate-postgres
    env_file: ../medgate.config
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    networks:
      - backend
    expose:
      - "5432"
    restart: on-failure

  ftp_server:
    image: fauria/vsftpd
    env_file: ../medgate.config
    container_name: medgate-ftpserver
    volumes:
      - data_in:/home/vsftpd/${MEDGATE_FTP_USER}/ingress
      - data_out:/home/vsftpd/${MEDGATE_FTP_USER}/output
    environment:
      - PASV_ADDRESS=${ftp_host_ip}
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
    networks:
      - backend
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    restart: on-failure

  webdav-server:
    image: morrisjobke/webdav
    container_name: medgate-webdav
    volumes:
      - data_in:/var/webdav/ingress
      - data_out:/var/webdav/output
    environment:
      - USERNAME=nlp
      - PASSWORD=password123
    networks:
      - backend
    expose:
      - "80"
    restart: on-failure

  medgate-service:
    image: swanseauniversitymedical/medgate-dev:latest
    container_name: medgate-service
    env_file: ../medgate.config
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      #- no_proxy=vault,localhost,elasticsearch,tika,postgres
      - host_ip=${ftp_host_ip}
    volumes:
      - C://Users/MedGateUser/medgate:/medgate
      - C://Users/MedGateUser/gcp:/gcp
      - C://Users/MedGateUser/token:/token
    networks:
      - backend
    expose:
      - "80"
    depends_on:
      - postgres
      - elasticsearch
    restart: on-failure


  gcp_8.5:
    #image: swanseauniversitymedical/gcp:8.5
    build: ./gcp/
    container_name: medgate-gcp_8.5
    volumes:
      - C://Users/MedGateUser/gcp/instances/gcp_1:/control
      - C://Users/MedGateUser/gcp/data:/control/data
      - C://Users/MedGateUser/gcp/output:/control/output
      - C://Users/MedGateUser/gcp/applications:/control/application
    depends_on:
      - medgate-service
    #command: ["-t","4","-m","20G","-d","/control"]
    command: ["-d","/control"]
    restart: on-failure

  nrdagateway:
    image: swanseauniversitymedical/nrdagateway-dev:latest
    container_name: medgate-nrdagateway
    networks:
      - backend
    expose:
      - "80"
    restart: on-failure

  pgadmin:
    image: fenglc/pgadmin4
    container_name: medgate-pgadmin
    ports:
      - "5050:5050"
    depends_on:
      - postgres
    networks:
      - backend
    restart: on-failure
    
  brat:
    image: cassj/brat
    container_name: medgate-brat
    env_file: ../medgate.config
    networks:
      - backend
    expose:
      - "80"
    volumes:
      - C://Users/MedGateUser/brat-data:/brat-data"
      - C://Users/MedGateUser/brat-cfg:/brat-cfg"
    restart: on-failure

  nginx: 
    image: nginx:latest
    container_name: medgate-nginx
    volumes:
      -  ../nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend
    ports:
      - 80:80
      - 443:443
    restart: on-failure
    
  # filebeat:
  #   build: ./filebeat/
  #   container_name: filebeat
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # "//var/run/docker.sock" for windows, "/var/run/docker.sock" for linux
  #     - /var/lib/docker/containers/:/var/log/monitor/docker/
  #   restart: on-failure
  #   networks:
  #     - backend
  #   depends_on:
  #     - elasticsearch
      
  # metricbeat:
  #   build: ./metricbeat/
  #   container_name: metricbeat
  #   restart: unless-stopped
  #   volumes:
  #     - /proc:/hostfs/proc:ro
  #     - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
  #     - /:/hostfs:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - backend
  #   depends_on:
  #     - elasticsearch
  #   command:
  #     - "-system.hostfs=/hostfs"
      
volumes:
  esdata:
  pgdata:
  data_in: 
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/Users/MedGateUser/medgate/ingress
  data_out:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/Users/MedGateUser/medgate/output
#  redisdata:

networks:
  backend:
